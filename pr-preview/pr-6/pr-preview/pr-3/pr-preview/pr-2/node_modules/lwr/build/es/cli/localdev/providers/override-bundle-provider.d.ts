import type { AbstractModuleId, BundleDefinition, ProviderContext, RuntimeEnvironment, RuntimeParams } from '@lwrjs/types';
import StaticBundler from '@lwrjs/static/bundle-provider';
export default class StaticOverrideBundleProvider extends StaticBundler {
    staticBundles: string[];
    moduleRegistry: import("@lwrjs/types").PublicModuleRegistry;
    moduleBundler: import("@lwrjs/types").PublicModuleBundler;
    cacheDir: string;
    writeProdBundlesDir: any;
    constructor(options: any, context: ProviderContext);
    findIndex(index1: number, index2: number): number;
    bundle<BundleIdentifier extends AbstractModuleId, RE extends RuntimeEnvironment>(moduleId: BundleIdentifier, runtimeEnvironment: RE, runtimeParams: RuntimeParams): Promise<BundleDefinition | undefined>;
    private packageProdSource;
}
//# sourceMappingURL=override-bundle-provider.d.ts.map