import { EventData, MouseEventData } from '../interfaces-private';
export type DomEventData = EventData | MouseEventData;
export declare const enum DomEventDataField {
    BaseEvent = 0,
    MouseEvent = 1
}
export type ResourceTiming = {
    name: string;
    startTime: number;
    duration: number;
    initiatorType: string;
    nextHopProtocol: string;
    renderBlockingStatus?: string;
    workerStart: number;
    redirectStart: number;
    redirectEnd: number;
    fetchStart: number;
    domainLookupStart: number;
    domainLookupEnd: number;
    connectStart: number;
    secureConnectionStart: number;
    connectEnd: number;
    requestStart: number;
    responseStart: number;
    firstInterimResponseStart?: number;
    responseEnd: number;
    transferSize: number;
    encodedBodySize: number;
    decodedBodySize: number;
    responseStatus: number;
    isCdnCached?: boolean;
    dbDuration?: number;
    srvDuration?: number;
    reqBatchCount?: number;
    reqActionNames: string[];
    srvReqId: string;
    xhrDelay?: number;
};
export type NavigationTimingOnly = {
    domComplete: number;
    domContentLoadedEventStart: number;
    domContentLoadedEventEnd: number;
    domInteractive: number;
    loadEventStart: number;
    loadEventEnd: number;
    redirectCount: number;
    type: string;
    unloadEventStart: number;
    unloadEventEnd: number;
};
export type NavigationTiming = ResourceTiming & NavigationTimingOnly;
