export const LWC_SSR_PREFIX = '@lwrjs/lwc-ssr/';
export const SSR_PROPS_ATTR = 'data-lwr-props-id';
export function getPropsId() {
    return `lwcprops${Math.floor(Math.random() * 0x10000).toString(16)}`;
}
// SSR bootstrap module specifiers look like this: @lwrjs/lwc-ssr/{route ID}/{component specifier}
// eg: @lwrjs/lwc-ssr/home/my/about,my/nav,my/sidebar -> { routeId: "home", rootSpecifiers: ["my/about","my/nav","my/sidebar"] }
export function parseBootstrapSpecifier(specifier, routes = []) {
    if (specifier.startsWith(LWC_SSR_PREFIX)) {
        const parts = specifier.replace(LWC_SSR_PREFIX, '');
        const slash = parts.indexOf('/');
        if (slash) {
            const routeId = parts.substring(0, slash);
            const rootSpecifierStr = parts.substring(slash + 1);
            if (rootSpecifierStr) {
                return {
                    rootSpecifiers: rootSpecifierStr.split(','),
                    route: routes.find((r) => r.id === routeId),
                };
            }
        }
    }
    return undefined;
}
export function getSsrServices(route) {
    return route && route.bootstrap.ssr
        ? route.bootstrap.services.filter((s) => s.ssr).map(({ name }) => name)
        : [];
}
//# sourceMappingURL=identity.js.map