import { TraceHeaders } from 'o11y/shared';
import { IdleDetector, Instrumentation, TracingHeadersOptions, NetworkInstrumentationOptions } from '../interfaces';
export declare class Tracing {
    private readonly _instr;
    private readonly _idleDetector;
    private static _global;
    private static _originalFetch;
    private static _originalXhr;
    private static _originalXhrOpen;
    private static _originalXhrSetRequestHeader;
    private static _originalXhrSend;
    private static _isNetworkInstrumentationEnabled;
    private static _reqIndex;
    private static _performanceObservability;
    constructor(_instr: Instrumentation, _idleDetector: IdleDetector);
    private static _getB3CompactFormat;
    private static _getW3CompactFormat;
    private static _conformTextAsId;
    static getHeaders(traceId: string, spanId: string, isSampled?: boolean, options?: TracingHeadersOptions): TraceHeaders;
    private _disableNetworkInstrumentation;
    private _enableNetworkInstrumentation;
    private static _getTraceHeaders;
    private static _extractHeader;
    private _overrideFetch;
    private static _endActivity;
    private _overrideXhr;
    networkInstrumentation(options: boolean | NetworkInstrumentationOptions): void;
    resetRequestCounter(): void;
    private _applyTraceHeaders;
}
